worker_processes 1;

user nobody nogroup;
# 'user nobody nobody;' for systems with 'nobody' as a group instead
error_log  /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
  worker_connections 1024; # increase if you have lots of clients
  accept_mutex off; # set to 'on' if nginx worker_processes > 1
  # 'use epoll;' to enable for Linux 2.6+
  # 'use kqueue;' to enable for FreeBSD, OSX
}

http {
  include mime.types;
  # fallback in case we can't determine a type
  default_type application/octet-stream;
  access_log /var/log/nginx/access.log combined;
  sendfile on;

  # client_body_in_file_only clean;
  # client_body_temp_path /tmp 1 2;

  # upstream channels-backend {
  #   server app:9002;
  # }

  server {
    listen 9001;
    server_name 127.0.0.1;

    client_max_body_size 4G;
    keepalive_timeout 5;

    access_log  /var/log/nginx/example.log;
    
    # path for static files
    root /var/www/html;

    location / {
      # checks for static file, if not found proxy to app
      # autoindex on;
      try_files $uri @proxy_to_app;
      # try_files $uri $uri/ =404;
    }

    # location /api {
    #   proxy_pass http://api:9001/api;
      # proxy_buffering off;
      # proxy_set_header X-Real-IP $remote_addr;
      # proxy_set_header X-Forwarded-Host $host;
      # proxy_set_header X-Forwarded-Port $server_port;
    # }

    location @proxy_to_app {
        # proxy_pass http://channels-backend;
        proxy_pass http://app:9002;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        proxy_redirect off;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $server_name;
    }
    
    # error_page 500 502 503 504 /500.html;
    # location = /500.html {
    #   root /var/www/html;
    # }
  }  
}
